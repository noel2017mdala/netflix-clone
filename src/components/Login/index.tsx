import Head from "next/head";
import Image from "next/image";
import React, { useState } from "react";
import backgroundImage from "../../../public/images/backgroundImage.jpeg";
import { useForm, SubmitHandler } from "react-hook-form";
import useAuth from "@/hooks/UserAuth";

type Props = {};
interface Inputs {
  email: string;
  password: string;
}

const Index = (props: Props) => {
  const [login, setLogin] = useState<boolean>(true);
  const { signIn, signUp } = useAuth();
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<Inputs>();

  // const SignUp = (email: string, password: string) => {
  //   setLogin(false);
  // };
  // const signIn = async (email: string, password: string) => {};
  const onSubmit: SubmitHandler<Inputs> = async ({ email, password }) => {
    if (login) {
      await signIn(email, password);
    } else {
      await signUp(email, password);
    }
  };

  return (
    <div className="relative flex h-screen w-screen flex-col bg-black md:items-center md:justify-center md:bg-transparent">
      <Head>
        <title>Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Image
        src={backgroundImage}
        fill
        className="-z-10 !hidden opacity-60 sm:!inline"
        alt={""}
        style={{ objectFit: "cover" }}
      />

      <img
        src="https://rb.gy/ulxxee"
        className="absolute left-4 top-4 cursor-pointer object-contain md:left-10 md:top-6"
        width={150}
        height={150}
      />

      <form
        className="relative mt-24 space-y-8 rounded bg-black/75 py-10 px-6 md:mt-0 md:max-w-md md:px-14"
        onSubmit={handleSubmit(onSubmit)}
      >
        <h1 className="text-4xl font-semibold">
          {login ? "Sign In" : "Sign Up"}
        </h1>

        <div className="space-y-8">
          <label className="inline-block w-full">
            <input
              type="email"
              placeholder="email"
              className="input"
              {...register("email", {
                required: true,
              })}
            />
            {errors.email && (
              <p className="p-1 text-[13px] font-light  text-orange-500">
                please enter a valid email
              </p>
            )}
          </label>
          <label className="inline-block w-full">
            <input
              type="password"
              placeholder="password"
              className="input"
              {...register("password", { required: true })}
            />
            {errors.password && (
              <span className="p-1 text-[13px] font-light  text-orange-500">
                Password must not be less than 6 characters
              </span>
            )}
          </label>
        </div>

        <button
          className="w-full rounded bg-[#e50914] py-3"
          // onClick={() => {
          //   setLogin(true);
          // }}
        >
          Sign In
        </button>
      </form>
      {!login ? (
        <div className="text-[gray]">
          Already have an account ?
          <button
            type="submit"
            className="text-white hover:underline mx-2"
            onClick={() => {
              setLogin(true);
            }}
          >
            Sign in now
          </button>
        </div>
      ) : (
        <div className="text-[gray]">
          New to netflix ?
          <button
            type="submit"
            className="text-white hover:underline mx-2"
            onClick={() => {
              setLogin(false);
            }}
          >
            Sign up now
          </button>
        </div>
      )}
    </div>
  );
};

export default Index;
